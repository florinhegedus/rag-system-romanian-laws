services:
  # Persistent Services
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file: .env
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  postgres:
    image: postgres:13
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  mlflow:
    image: mlflow/mlflow
    env_file: .env
    volumes:
      - mlflow_artifacts:/mlflow
    ports:
      - "5000:5000"

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage

  legal-search-api:
    build: 
      context: ./
      dockerfile: ./services/legal_search_api/Dockerfile
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      - qdrant
      - postgres

  frontend:
    build: 
      context: ./
      dockerfile: ./services/frontend/Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - legal-search-api

  # On-demand Services (run with docker-compose run)
  collect-data:
    build: 
      context: ./
      dockerfile: ./services/data_collection/Dockerfile
    env_file: .env
    depends_on:
      - minio

  process-data:
    build: 
      context: ./
      dockerfile: ./services/data_processing/Dockerfile
    env_file: .env
    depends_on:
      - minio
      - postgres

  # train-model:
  #   build: ./components/component3
  #   env_file: .env
  #   depends_on:
  #     - postgres
  #     - mlflow

  generate-embeddings:
    build: 
      context: ./
      dockerfile: ./services/embeddings_generation/Dockerfile
    env_file: .env
    depends_on:
      - postgres
      - qdrant

volumes:
  minio_data:
  pg_data:
  qdrant_data:
  mlflow_artifacts:
